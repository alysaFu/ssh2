<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:spring="http://www.infinispan.org/schemas/spring" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd http://www.infinispan.org/schemas/spring http://www.infinispan.org/schemas/infinispan-spring-5.0.xsd"
	default-autowire="byName">
	
	<!-- auto wire bean -->
	<context:annotation-config/>

	<!-- auto scan bean base package , 可以有多个值，以逗号分开-->
	<context:component-scan base-package="com.vteba"/>
	
	<bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jndi.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="mailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="protocol" value="smtp"/>
		<property name="port" value="25"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="username" value="${email.username}" />
		<property name="password" value="${email.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<!-- 使用gmail smtp server的必须参数 -->
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
<!-- 		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> -->
<!-- 		<property name="host"> -->
<!-- 			<value>smtp.163.com</value> -->
<!-- 		</property> -->
<!-- 		<property name="javaMailProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="mail.smtp.auth">true</prop> -->
<!-- 				<prop key="mail.smtp.timeout">25000</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 		<property name="username"> -->
<!-- 			<value>yinlei_nb@163.com</value> -->
<!-- 		</property> -->
<!-- 		<property name="password"> -->
<!-- 			<value>0558yi阿斯顿1676</value> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>smtp.exmail.qq.com</value>
		</property>
		<property name="protocol" value="smtp"/>
		<property name="port" value="25"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
<!-- 				<prop key="mail.smtp.starttls.enable">true</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.fallback">false</prop> -->
<!-- 				<prop key="mail.smtp.debug">true</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
<!-- 				<prop key="mail.smtp.port">465</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.port">465</prop> -->
<!-- 				<prop key="mail.transport.protocol">smtp</prop> -->
			</props>
		</property>
		<property name="username">
			<value>yinlei@eecn.com.cn</value>
		</property>
		<property name="password">
			<value>234</value>
		</property>
	</bean>
<!-- 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> -->
<!-- 		<property name="host"> -->
<!-- 			<value>smtp.126.com</value> -->
<!-- 		</property> -->
<!-- 		<property name="javaMailProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="mail.smtp.auth">true</prop> -->
<!-- 				<prop key="mail.smtp.timeout">25000</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 		<property name="username"> -->
<!-- 			<value>tongku2008@126.com</value> -->
<!-- 		</property> -->
<!-- 		<property name="password"> -->
<!-- 			<value>123</value> -->
<!-- 		</property> -->
<!-- 	</bean>   -->
 
	
	<!-- hibernate事务管理器配置 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 数据源配置 -->
	<bean id="newDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>

		<property name="maxPoolSize" value="20"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="initialPoolSize" value="10"></property>
		<property name="maxIdleTime" value="20"></property>
	</bean>

	<!--based annotation config Hibernate sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="newDataSource" />
		<property name="packagesToScan"><!-- 要扫描的实体类所在的包或者父包 -->
			<list>
				<value>com.vteba.user.model</value>
			</list>
		</property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">10</prop>
				<prop key="hibernate.default_batch_fetch_size">50</prop>
				<prop key="hibernate.jdbc.use_reflection_optimizer">true</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
<!-- 				<prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="javax.persistence.validation.mode">none</prop>

			</props>
		</property>
	</bean>
	
	<!-- aop transaction advice -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="list*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" read-only="true"/> 
			<tx:method name="unique*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="persist*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="auto*" propagation="REQUIRED"/>
			<tx:method name="batch*" propagation="REQUIRED"/>
			<tx:method name="check*" propagation="REQUIRED"/>
			<tx:method name="calculate*" propagation="REQUIRED"/>
			<tx:method name="handle*" propagation="REQUIRED"/>
			<tx:method name="decide*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" timeout="6000" rollback-for="java.lang.RuntimeException"/>
		</tx:attributes> 
	</tx:advice>
	
	<aop:config><!--为指定包下所有类的所有方法应用事务切点-->
		<aop:pointcut expression="execution(* com.vteba.*.*.impl.*.*(..))" id="serviceTxMethodPointCut"/>
		<aop:pointcut expression="execution(* com.vteba.*.*.service.impl.*.*(..))" id="financeTxMethodPointCut"/>
		<aop:pointcut expression="execution(* com.vteba.*.*.remote.*.*(..))" id="remoteTxMethodPointCut"/>		
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="serviceTxMethodPointCut"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="financeTxMethodPointCut"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="remoteTxMethodPointCut"/>
	</aop:config>
	
</beans>